# Generated by Django 5.0 on 2024-07-27 02:20

from django.db import migrations
import json

def change_body_str(body_str) -> str:
    body_dict = json.loads(body_str)
    new_body = []
    for paragraph in body_dict['content']: 
        if paragraph['type'] == 'heading':
            if paragraph['attrs']['level'] == 1:
                continue
            #else: if level is not img
            new_dict = {'type': 'thumb_text', 'text': paragraph['content'][0]['text']}
            new_body.append(new_dict)
        elif paragraph['type'] == 'paragraph':
            try:
                for text in paragraph['content']:
                    if text['type'] == 'text':
                        new_dict = {'type': 'text', 'text': str(text['text'])}
                        new_body.append(new_dict)
            except:
                pass
        elif paragraph['type'] == 'image':
            src = paragraph['attrs']['src']
            new_dict = {'type': 'image', 'src': src}
            new_body.append(new_dict)
    new_body_json = json.dumps(new_body, ensure_ascii=False)
    return new_body_json

def reverse_change_body_str(body_str) -> str:
    body_dicts : list[dict]= json.loads(body_str)
    old_body = []
    for page in body_dicts:
        if page['type'] == 'text':
            paragraph_dict = {'type' : 'paragraph',
                              'content': [{'type': 'text',
                                           'text': page['text']}]}
            old_body.append(paragraph_dict)
        elif page['type'] == 'thumb_text':
            heading_dict = {'type' : 'heading',
                            'attrs': {'level': 2},
                            'content': [{'type': 'text',
                                         'text': page['text']}]}
            old_body.append(heading_dict)
        elif page['type'] == 'image':
            image_dict = {'type' : 'image',
                          'attrs': {'src': page['src']}}
            old_body.append(image_dict)
    old_dict = {'type' : 'doc',
                'content' : old_body}
    old_body_json = json.dumps(old_dict, ensure_ascii=False)
    return old_body_json

def change_design_post_body(apps, schema_editor):
    Post = apps.get_model('blog', 'Post')
    posts = Post.objects.all()
    for post in posts:
        post.body = change_body_str(post.body)
        post.save()

def reverse_change_design_post_body(apps, schema_editor):
    Post = apps.get_model('blog', 'Post')
    posts = Post.objects.all()
    for post in posts:
        post.body = reverse_change_body_str(post.body)
        post.save()

class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0011_remove_postimage_unique_post_device_index_and_more'),
    ]

    operations = [
        migrations.RunPython(change_design_post_body, reverse_change_design_post_body),
    ]
